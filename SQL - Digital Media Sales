#For this project I used SQL to query a digital media sales database to learn more about the tracks, artists, customers, and employee sales data.

#1. List of all customers outside the US.
SELECT
    FirstName || ' ' || LastName AS FullName,
    CustomerId,
    Country
FROM chinook.customers
WHERE Country != 'USA'
ORDER BY FullName ASC;


#2. List of customers from Brazil.
SELECT
    FirstName || ' ' || LastName AS FullName,
    CustomerId,
    Country
FROM chinook.customers
WHERE Country = 'Brazil'
ORDER BY FullName ASC;


#3. Invoices for customers from Brazil.
SELECT 
    FirstName || ' ' || LastName AS FullName,
    InvoiceID,
    InvoiceDate,
    BillingCountry
FROM chinook.customers
LEFT JOIN chinook.invoices
ON customers.CustomerId=invoices.CustomerId
WHERE Country = 'Brazil'
ORDER BY InvoiceDate DESC;


#4. List of Sales Agents
SELECT
    FirstName || ' ' || LastName AS FullName,
    Title
FROM chinook.employees
WHERE Title='Sales Support Agent'
ORDER BY FullName ASC;


#5. List of billing countries.
SELECT 
    DISTINCT BillingCountry
FROM chinook.invoices
ORDER BY BillingCountry ASC;


#6. Invoices for each Sales Agent
SELECT
    emp.FirstName || ' ' || emp.LastName AS EmpFullName,
    cust.FirstName || ' ' || cust.LastName AS CustFullName,
    InvoiceId
FROM chinook.Employees AS emp
JOIN chinook.customers AS cust
ON cust.SupportRepId=emp.EmployeeId
JOIN chinook.invoices AS inv
ON cust.CustomerID=inv.CustomerId
ORDER BY
    EmpFullName ASC, CustFullName ASC;


#7. Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT
    emp.FirstName || ' ' || emp.LastName AS EmpFullName,
    cust.FirstName || ' ' || cust.LastName AS CustFullName,
    cust.Country,
    inv.InvoiceId,
    inv.Total
FROM chinook.Employees AS emp
JOIN chinook.customers AS cust
ON cust.SupportRepId=emp.EmployeeId
JOIN chinook.invoices AS inv
ON cust.CustomerID=inv.CustomerId
ORDER BY
    EmpFullName ASC, CustFullName ASC;


#8. Total # of invoices in 2009.
SELECT
    COUNT(InvoiceId) AS Total_Invoices
FROM chinook.invoices
WHERE InvoiceDate LIKE '2009%';


#9. Total sales for 2009
SELECT
    ROUND(SUM(Total),2) AS Total_Sales
FROM chinook.invoices
WHERE InvoiceDate LIKE '2009%';


#10. Track names by invoice line ID.
SELECT
    items.InvoiceLineID,
    tracks.name
FROM chinook.tracks
JOIN chinook.invoice_items AS items
ON tracks.TrackId=items.TrackId
ORDER BY InvoiceLineID ASC;


#11. Track and Artist names by Invoice Line ID.
SELECT
    items.InvoiceLineID,
    art.name AS Artist,    
    tracks.name AS Track
FROM chinook.tracks
JOIN chinook.invoice_items AS items
ON tracks.TrackId=items.TrackId
JOIN chinook.albums AS alb
ON alb.AlbumId=tracks.AlbumId
JOIN chinook.artists AS art
ON art.ArtistId=alb.ArtistId
ORDER BY InvoiceLineID ASC;


#12. All tracks and the associated album names, media type, and genre.
SELECT
    tracks.name AS Track,
    alb.Title AS Album,
    gen.name AS Genre,
    mt.name AS Media_Type
FROM chinook.tracks
JOIN chinook.albums AS alb
ON tracks.AlbumId=alb.AlbumId
JOIN chinook.genres AS gen
ON gen.GenreId=tracks.GenreId
JOIN chinook.media_types AS mt
ON mt.MediaTypeId=tracks.MediaTypeId
ORDER BY Track ASC;


#13. Total Sales by each Sales Agent
SELECT
    emp.FirstName || ' ' || emp.LastName AS FullName,
    ROUND(SUM(inv.Total),2) AS Total_Sales
FROM chinook.customers AS cust
JOIN chinook.invoices AS inv
ON cust.CustomerID=inv.CustomerId
JOIN chinook.employees AS emp
ON emp.EmployeeID=cust.SupportRepId
WHERE emp.Title = 'Sales Support Agent'
GROUP BY FullName
ORDER BY
    Total_Sales DESC;
    

#14. Sales Agent with the most sales in 2009.
SELECT
    emp.FirstName || ' ' || emp.LastName AS FullName,
    ROUND(SUM(inv.Total),2) AS Total_Sales
FROM chinook.customers AS cust
JOIN chinook.invoices AS inv
ON cust.CustomerID=inv.CustomerId
JOIN chinook.employees AS emp
ON emp.EmployeeID=cust.SupportRepId
WHERE emp.Title = 'Sales Support Agent' AND inv.InvoiceDate LIKE '2009%'
GROUP BY FullName
ORDER BY
    Total_Sales DESC
LIMIT 1;


#15. Tracks/Artists listed by # of playlists and the names of the playlists they are included on.
SELECT
    tracks.name AS Track,
    art.name AS Artist,
    play.name AS Playlists,
    COUNT(pt.PlaylistId) OVER (PARTITION by pt.TrackId) AS Total_Count
FROM chinook.playlist_track AS pt
JOIN chinook.tracks
ON pt.TrackId=tracks.TrackId
JOIN chinook.playlists AS play
ON pt.PlaylistID=play.PlaylistID
JOIN chinook.albums AS alb
ON tracks.AlbumId=alb.AlbumId
JOIN chinook.artists AS art
ON alb.ArtistId=art.ArtistId
GROUP BY pt.TrackId, play.name
ORDER BY Total_Count DESC;
